" vim: filetype=vim foldmethod=marker fileformat=unix

" WARNING: DO NOT CHANGE   {{{1
let s:cfg_name = expand('<sfile>:p:t:r')

let s:dict = {}
let s:dict.name = s:cfg_name
" }}}1

" NEOBUNDLE REGISTRATION   {{{1

" Repository Address.
" use github's shortened form, e.g. 'your_id/repo_name'
let s:repo = 'kien/ctrlp.vim'

" More Neobundle Configurations.
" TODO: any additional NeoBundle configuration goes here ...

" }}}1

" PLUGIN CONFIGURATIONS.   {{{1

function! s:cfg_func()
    let g:ctrlp_extensions = ['line', 'tag', 'mixed', 'funky',  'rtscript']

    " mappings
    let g:ctrlp_map = '<Space>P'
    nnoremap <Space>r :CtrlPMRUFiles<CR>
    nnoremap <Space>s :CtrlPRTS<CR>
    nnoremap <Space>m :CtrlPMixed<CR>
    nnoremap <Space>l :CtrlPLine<CR>
    nnoremap <Space>c :CtrlPChangeAll<CR>
    nnoremap <Space>f :call <SID>Hard()<CR>

    " cache
    let g:ctrlp_clear_cache_on_exit = 0
    let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
    " let g:ctrlp_match_window      = 'bottom , order:btt , min:5 , max:15 , results:15'
    let g:ctrlp_working_path_mode   = 'ra'
    " let g:ctrlp_root_markers      = ['']
    let g:ctrlp_show_hidden         = 0
    " let g:ctrlp_custom_ignore     = ''
    let g:ctrlp_follow_symlinks     = 1
    let g:ctrlp_by_filename         = 1

    " Single VCS, listing command does not list untracked files:
    let g:ctrlp_user_command = {
                \ 'types':
                \   {
                \     1: ['.git', 'cd %s && git ls-files'],
                \     2: ['.hg', 'hg --cwd %s locate -I .'],
                \   }
                \ }
    if has('win32') || has('win64')
        let g:ctrlp_user_command.fallback = 'dir %s /-n /b /s /a-d'
    elseif has('unix')
        let g:ctrlp_user_command.fallback = 'find %s -type f'
    elseif has('mac') || has('macunix')
    else
        echoerr echo "Oops! Unknown sysinfo"
    endif
endfunction

function! <SID>Hard()
    if has('win32') || has('win64')
        let b:ctrlp_user_command = 'dir %s /-n /b /s /a-d'
    elseif has('unix')
        let b:ctrlp_user_command = 'find %s -type f'
    elseif has('mac') || has('macunix')
    else
        echoerr echo "Oops! Unknown sysinfo"
    endif

    :CtrlP
endfunction

"function! <SID>Git()
    "let b:ctrlp_user_command = ['.git', 'cd %s && git ls-files']
"endfunction

"function! <SID>Hg()
    "let b:ctrlp_user_command = ['.git', 'cd %s && git ls-files']
"endfunction

" }}}1

" WARNING: DO NOT CHANGE   {{{1
let s:repo = "'" . s:repo . "'"
execute "NeoBundle " . s:repo . ', ' . string(s:dict)
execute 'let g:CONFIG_PLUGIN_' . s:cfg_name . '= function("s:cfg_func")'
" }}}1
