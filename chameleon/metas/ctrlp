" vim: filetype=vim foldmethod=marker fileformat=unix

let g:this_meta.site = 'https://github.com/ctrlpvim/ctrlp.vim.git'

" NOTE: the dict bellow will be passed to command 'PlugInstall'
" as the 2nd argument to install this plugin.
let g:this_meta.vimplug_cmd_dict = {}

function g:this_meta.config()
  let g:ctrlp_extensions = ['tag', 'mixed', 'funky',  'rtscript']

  " mappings
  let g:ctrlp_map = '<Space>p'
  nnoremap <Space>r :silent CtrlPMRUFiles<Cr>
  nnoremap <Space>s :silent CtrlPRTS<Cr>
  nnoremap <Space>m :silent CtrlPMixed<Cr>
  nnoremap <Space>c :silent CtrlPChangeAll<Cr>
  nnoremap <Space>b :silent CtrlPBuffer<Cr>

  " extention loadplugin
  call add(g:ctrlp_extensions, 'load_plugin')
  command! CtrlPLoadPlugin call ctrlp#init(ctrlp#load_plugin#id())
  nnoremap <Space>l :silent CtrlPLoadPlugin<Cr>

  " cache
  let g:ctrlp_custom_ignore = {
        \ 'dir':  '\v[\/]\.(git|hg|svn)$',
        \ 'file': '\v\.(exe|so|dll|DS_Store|pyc)$',
        \ }

  " let g:ctrlp_match_window      = 'bottom , order:btt , min:5 , max:15 , results:15'
  " let g:ctrlp_root_markers      = ['']
  let g:ctrlp_by_filename         = 1
  let g:ctrlp_cache_dir           = $HOME . '/.cache/ctrlp'
  let g:ctrlp_clear_cache_on_exit = 0
  let g:ctrlp_max_files           = 0
  let g:ctrlp_follow_symlinks     = 1
  let g:ctrlp_mruf_case_sensitive = 0
  let g:ctrlp_regexp              = 0
  let g:ctrlp_show_hidden         = 0
  let g:ctrlp_working_path_mode   = 'ra'

  " Single VCS, listing command does not list untracked files:

  " determine fallback command outside of a repo.
  if executable("ag")
    set grepprg=ag\ --nogroup\ --nocolor
    let fallback_command = 'ag %s -i --nocolor --nogroup '
          \ . ' --ignore .git '
          \ . ' --ignore .DS_Store'
          \ . ' --ignore node_modules'
          \ . ' --ignore .pyc'
          \ . ' --hidden -g ""'
  else
    if has('win32') || has('win64')
      let fallback_command= 'dir %s /-n /b /s /a-d'
    elseif has('unix') " *nix including MacOS
      let fallback_command = 'find %s -type f'
    else
      echoerr echo "Oops! Unknown sysinfo"
    endif
  endif

  let g:ctrlp_user_command = {
        \ 'types': {
        \   1: ['.git', 'cd %s && git ls-files'],
        \   2: ['.hg', 'hg --cwd %s locate -I .'],
        \ },
        \ 'fallback': fallback_command,
        \ }

endfunction
